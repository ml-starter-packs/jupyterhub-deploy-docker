ARG JUPYTERHUB_VERSION
FROM docker.io/jupyter/r-notebook:hub-${JUPYTERHUB_VERSION}

###### R ENV #######
USER root

# R pre-requisites
RUN apt-get update && \
	apt-get install -y --no-install-recommends \
	fonts-dejavu \
	unixodbc \
	less \
	unixodbc-dev \
	r-cran-rodbc \
	gfortran \
	gcc && \
	rm -rf /var/lib/apt/lists/*

# Fix for devtools https://github.com/conda-forge/r-devtools-feedstock/issues/4
RUN ln -s /bin/tar /bin/gtar

USER ${NB_UID}

# R packages including IRKernel which gets installed globally.
# r-e1071: dependency of the caret R package
RUN mamba install --quiet --yes \
    'r-base' \
    'r-caret' \
    'r-crayon' \
    'r-devtools' \
    'r-e1071' \
    'r-forecast' \
    'r-hexbin' \
    'r-htmltools' \
    'r-htmlwidgets' \
    'r-irkernel' \
    'r-nycflights13' \
    'r-randomforest' \
    'r-rcurl' \
    'r-rmarkdown' \
    'r-rodbc' \
    'r-rsqlite' \
    'r-shiny' \
    'r-tidyverse' \
    'unixodbc' && \
    mamba clean --all -f -y && \
    fix-permissions "${CONDA_DIR}" && \
    fix-permissions "/home/${NB_USER}"

# `r-tidymodels` is not easy to install under arm
RUN set -x && \
    arch=$(uname -m) && \
    if [ "${arch}" == "x86_64" ]; then \
        mamba install --quiet --yes \
            'r-tidymodels' && \
            mamba clean --all -f -y && \
            fix-permissions "${CONDA_DIR}" && \
            fix-permissions "/home/${NB_USER}"; \
    fi;



# RStudio

#RUN cd /tmp/ && \
#	git clone --depth 1 https://github.com/jupyterhub/jupyter-server-proxy && \
#	cd jupyter-server-proxy/jupyterlab-server-proxy && \
#	npm install && npm run build && jupyter labextension link . && \
#	npm run build && jupyter lab build

# for hub 1.5.0:
# https://download2.rstudio.org/server/bionic/amd64/rstudio-server-1.4.1106-amd64.deb
ENV RSTUDIO_DEB=https://download2.rstudio.org/server/jammy/amd64/rstudio-server-2022.07.1-554-amd64.deb
# install rstudio-server
USER root
# RUN apt-get install gdebi-core
RUN apt-get -yqq update && \
 	apt-get install -yqq \
 		libssl3 \
 		libclang-dev \
 		&& \
 	curl --silent -L --fail ${RSTUDIO_DEB} > /tmp/rstudio.deb && \
 	apt-get install -y /tmp/rstudio.deb && \
 	rm /tmp/rstudio.deb && \
 	apt-get -qq purge && \
	apt-get -qq clean

ENV PATH=$PATH:/usr/lib/rstudio-server/bin

USER root
# Cleanup
RUN rm -rf $CONDA_DIR/share/jupyter/lab/staging && \
	rm -rf /home/$NB_USER/.cache/yarn && \
	apt-get -qq purge && \
	apt-get -qq clean && \
	rm -rf /var/lib/apt/lists/*

USER $NB_UID

# Final cleaning
# build and clean up (for good measure)
RUN  npm cache clean --force && \
	rm -rf /home/$NB_USER/.node-gyp

RUN mamba clean --all -f -y && \
	fix-permissions $CONDA_DIR && \
	fix-permissions /home/$NB_USER

# CMD R
USER root
## CONFIG
# Copy over config which creates launcher icons in jupyterlab
COPY jupyter_notebook_config.py /home/$NB_USER/.jupyter/
RUN mkdir -p /home/$NB_USER/.jupyter/lab/workspaces/
COPY ./jupyterlab_settings /home/$NB_USER/.jupyter/lab/user-settings/@jupyterlab
RUN chown -R $NB_USER:$NB_GUID /home/$NB_USER/.jupyter/lab

USER $NB_UID
# RUN python3 -m pip install jupyter-rsession-proxy jupyter_server_proxy
RUN python3 -m pip install git+https://github.com/ryanlovett/jupyter-rsession-proxy@95759d85e95de6cb102702762d23f74ae2d46baa
